spring:
  cloud:
    discovery:
      client:
        simple:
          instances:
            company-service[0]:
              uri: http://localhost:${wiremock.server.port}
    config:
      enabled: false
  jpa:
    properties:
      hibernate:
        default_schema: seller_system
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.UUIDSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: "userTransactionStatusMessage:com.seller.sellersystem.usertransaction.messages.UserTransactionStatusMessage, reducePositionAmountMessage:com.seller.sellersystem.position.messages.ReducePositionAmountMessage"
    consumer:
      group-id: boughts_group
      key-deserializer: org.apache.kafka.common.serialization.UUIDDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      properties:
        spring:
          json:
            type:
              mapping: "userTransactionStatusMessage:com.seller.sellersystem.usertransaction.messages.UserTransactionStatusMessage, reducePositionAmountMessage:com.seller.sellersystem.position.messages.ReducePositionAmountMessage"
  liquibase:
    change-log: classpath:db/changelog/sellersystem/db.changelog.xml

eureka:
  client:
    enabled: false

wiremock:
  reset-mappings-after-each-test: true

kafka:
  topics:
    boughts_topic: topic_boughts
    transaction_status_topic: topic_transaction_status