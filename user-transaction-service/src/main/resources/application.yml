server:
  servlet:
    context-path: /api
  port: 8074

spring:
  application:
    name: user-transaction-service
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
  kafka:
    bootstrap-servers: ${KAFKA_URL:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.UUIDSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: reducePositionAmountMessage:com.seller.usertransactionservice.usertransaction.messages.ReducePositionAmountMessage
    consumer:
      group-id: user_transaction_status_group
      key-deserializer: org.apache.kafka.common.serialization.UUIDDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            type:
              mapping: userTransactionStatusMessage:com.seller.usertransactionservice.usertransaction.messages.UserTransactionStatusMessage

  jpa:
    properties:
      hibernate:
        default_schema: user_transactions
  profiles:
    active: postgres-local
  config:
    import: configserver:${CONFIG_SERVER_URL:http://localhost:8888/}
  liquibase:
    change-log: classpath:db/changelog/usertransactions/db.changelog.xml

pagination:
  max-page-size: 20

kafka:
  topics:
    boughts_topic: topic_boughts
    transaction_status_topic: topic_transaction_status

redis:
  default:
    expiration: 3m